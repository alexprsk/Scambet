  name: New Build Backend and Deploy

  permissions:
    id-token: write  
    contents: read

  run-name: Build Backend and Deploy from branch ${{ github.ref_name }} by @${{ github.actor }}

  on:
    workflow_dispatch:
    push:
      branches:
        - 'master'
      tags:
        - 'v*'
    pull_request:
      branches:
        - 'master'

  jobs:
    build-and-push:
      runs-on: ubuntu-latest
      steps:

        - name: Checkout
          uses: actions/checkout@v4

        - name: Docker meta
          id: meta
          uses: docker/metadata-action@v5
          with:
            images: ghcr.io/${{ github.actor }}/prd.scambet
            tags: |

              type=semver,pattern={{version}}
              type=semver,pattern=latest
        

        - name: Set Target Repo
          id: set_repo
          run: |
            echo "gh_repo=${{ steps.meta.outputs.images }}" >> $GITHUB_ENV
            gh_repo="${{ steps.meta.outputs.images }}"
            echo "Set gh_repo=$gh_repo"

        - name: Login to GitHub Container Registry
          uses: docker/login-action@v1
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.CR_PAT }}

        - name: Build and push
          uses: docker/build-push-action@v6
          with:
            context: .
            push: ${{ github.event_name == 'push' }}
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}


        - name: Export GH_REPO for the Next Job
          id: export_repo
          run: |
            echo "gh_repo=$GH_REPO" >> $GITHUB_OUTPUT

    Deploy-New-Be-Version:
      runs-on: ubuntu-latest
      needs: build-and-push

      steps:
        - name: Checkout 
          uses: actions/checkout@v4

        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            aws-region: eu-central-1
            role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-for-EC2-full
            role-session-name: FrontendDeployment
            audience: sts.amazonaws.com

        - name: Get Runner IP Address
          id: ip
          uses: haythem/public-ip@v1.2
        - name: whitelist runner ip address
          run: |
            aws ec2 authorize-security-group-ingress \
              --group-id ${{ secrets.AWS_SG_GROUP_ID }} \
              --protocol tcp \
              --port 22 \
              --cidr ${{ steps.ip.outputs.ipv4 }}/32

        - name: Upload image to EC2 and reload container
          env:
            GH_REPO: ${{ needs.build-and-push.outputs.gh_repo }}
          run: |
            echo "${{ secrets.EC2_SSH_KEY }}" > temp_ssh_key.pem
            chmod 600 temp_ssh_key.pem

            ssh -i temp_ssh_key.pem -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} << EOF
              echo "image version is: $GH_REPO:latest"
              sudo docker pull $GH_REPO:latest
              sudo docker compose stop scambet || true
              sudo docker compose rm -f scambet || true
              sudo docker compose up -d
              docker image prune --force
            EOF
            
        - name: Revoke Runner IP Address
          if: always()  
          run: |
            aws ec2 revoke-security-group-ingress \
              --group-id ${{ secrets.AWS_SG_GROUP_ID }} \
              --protocol tcp \
              --port 22 \
              --cidr ${{ steps.ip.outputs.ipv4 }}/32            


        - name: Cleanup SSH key
          run: rm -f temp_ssh_key.pem

        - name: Generate and display summary
          env:
            DEPLOYED_BRANCH: ${{ github.ref_name }}
            TRIGGERED_BY: ${{ github.actor }}
            RUN_NUMBER: ${{ github.run_number }}
            GH_REPO: ${{ needs.build-and-push.outputs.gh_repo }}
            GITHUB_SHA: ${{ github.sha }}
          run: |
            {
              echo "### 🚀 Frontend Deployment Summary"
              echo ""
              echo "**Status:** ✅ Success"
              echo "**Deployed Branch:** \`${DEPLOYED_BRANCH}\`"
              echo "**Triggered by:** \`@${TRIGGERED_BY}\`"
              echo "**Run Number:** \`${RUN_NUMBER}\`"
              echo ""
              echo "### 📦 Docker Image Details"
              echo "- **Repository:** \`${GH_REPO}\`"
              echo "- **Tags:**"
              echo "  - \`latest\` (for deployment)"
              echo "  - \`${GITHUB_SHA}\` (immutable commit reference)"
              echo ""
              echo "### 🧱 Build & Deploy Steps"
              echo "1. ✅ Code checkout"
              echo "2. ✅ NPM install and production build"
              echo "3. ✅ Docker image built and tagged"
              echo "4. ✅ Image pushed to GHCR"
              echo "5. ✅ EC2 instance pulled the latest image"
              echo "6. ✅ Container restarted with Docker Compose"
              echo "7. ✅ Old images pruned"
              echo ""
              echo "### 🐳 Docker Commands for Manual Use"
              echo "**Pull latest image:**"
              echo "\`\`\`bash"
              echo "docker pull ${GH_REPO}:latest"
              echo "\`\`\`"
              echo "**Run the container locally:**"
              echo "\`\`\`bash"
              echo "docker run -p 80:80 ${GH_REPO}:latest"
              echo "\`\`\`"
              echo ""
              echo "### 🔒 EC2 Access Info"
              echo "- IP whitelisted temporarily during deploy"
              echo "- SSH key removed after deployment"
              echo ""
              echo "---"
              echo "_Generated on $(date -u) UTC_"
            } >> $GITHUB_STEP_SUMMARY
  
                echo ""
                echo "---"
                echo "_Generated on $(date -u) UTC_"
              } >> $GITHUB_STEP_SUMMARY
